---
  tasks:
    - name: SyncListingTask
      queue: sync_listing_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: Redis

    - name: GraphSyncSolverTask
      queue: sync_result_solver_task
      import: thoth.worker.tasks
      max_retry: 0

    - name: GraphSyncAnalysisTask
      queue: sync_result_analysis_task
      import: thoth.worker.tasks
      max_retry: 0

    - name: PyPIListingTask
      queue: pypi_listing_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: Redis

    - name: ProjectInfoTask
      queue: download_project_info_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: ProjectInfoStore

    - name: PyPIProjectKeywordsTask
      queue: pypi_project_keywords_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: PyPIKeywordsRedis
      # storage: Memory

    - name: StackOverflowKeywordsAggregationTask
      queue: keywords_aggregation_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: StackOverflowKeywordsStore
      selective_run_function:
        import: thoth.worker.selective
        name: no_run_generic

    - name: KeywordsAggregationTask
      queue: keywords_aggregation_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: AggregatedKeywordsStore
      selective_run_function:
        import: thoth.worker.selective
        name: no_run_generic

    - name: RetrieveProjectReadmeTask
      queue: retrieve_project_readme_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: ReadmeStore

    - name: Project2VecTask
      queue: project2vec_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: Project2VecSingleRedis
      # storage: Memory

    - name: Project2VecCreationTask
      queue: project2vec_creation_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: Project2VecModelStore

    - name: RetrieveGitHubInfoTask
      queue: github_project_info_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: GitHubInfoStore

    - name: TravisActiveRepos
      queue: travis_active_repos_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: Redis

    - name: TravisRepoBuilds
      queue: travis_repo_builds_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: Redis

    - name: TravisLogTxt
      queue: travis_log_txt_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: TravisLogsStorage

    - name: TravisRepoBuildsCount
      queue: travis_repo_builds_count_task
      import: thoth.worker.tasks
      max_retry: 0
      storage: Redis

    - name: TravisLogCleanup
      queue: travis_log_cleanup
      import: thoth.worker.tasks
      max_retry: 0
      storage: TravisLogsStorage

  flows:
    # Sync results of solvers and package-extract (used for debug and benchmarks).
    - sync_flow
    # Aggregate project info for all PyPI projects
    #   args: None
    - pypi
    # Aggregate project info for a single PyPI project
    #   args: {"project_name": "thoth-worker"}
    - pypi_project
    # Aggregate keywords from PyPI project info (keywords section) as well as StackOverflow.
    #   args: None
    - keywords
    # Aggregate README file for a single package, the URL is taken from project info dict as aggregated in pypi_project.
    #   args: {"project_name": "thoth-worker"}
    - readme_file
    # Aggregate README files for all PyPI projects, the README file is aggregated based on project home page URL (github).
    #   args: None
    - project_readme_files
    # Create vector space representation of all projects - there are reused keywords from keywords flow
    #   args: None
    - project2vec
    # Create a single vector for a project - there are reused keywords from keywords flow
    #   args: {"project_name": "thoth-worker"}
    - project2vec_single
    # Aggregate GitHub's info for a single PyPI project
    #   args: {"project_name": "thoth-worker"}
    - github_info
    # Aggregate GitHub info for all PyPI projects, info is aggregated based on project home page URL (github).
    #   args: None
    - project_github_info
    # All flows prefixed by underscore are "internal" temporary flows and should not be called by a user.
    - _pypi_keywords_flow
    - __pypi_keywords_flow
    - _do_sync_flow
    - _project2vec
    - _travis_repo_builds
    # Aggregate all the logs for the given organization/repo.
    #   args: {"organization": "selinon", "repo": "selinon, "token": "<your travis CI token>"}
    - travis_repo_logs
    # Aggregate all the logs for the given organization - for all the registered repositories
    # for that organization in Travis CI.
    #   args: {"organization": "selinon", "token": "<your travis CI token>"}
    - travis_org_logs
    - travis_build_logs

  storages:
    # Redis adapters are used for temporary results.
    - name: Redis
      import: selinon.storages.redis
      configuration:
        host: redis
        port: 6379
        db: 1
        charset: 'utf-8'

    - name: PyPIKeywordsRedis
      classname: Redis
      import: selinon.storages.redis
      configuration:
        host: redis
        port: 6379
        db: 2
        charset: 'utf-8'

    - name: Project2VecSingleRedis
      classname: Redis
      import: selinon.storages.redis
      configuration:
        host: redis
        port: 6379
        db: 3
        charset: 'utf-8'

    - name: Memory
      classname: InMemoryStorage
      import: selinon.storages.memory
      configuration:
        echo: false

    - name: PyPIKeywordsStore
      import: thoth.worker.storages
      configuration: &ceph_configuration
        bucket: '{THOTH_CEPH_BUCKET}'
        prefix: '{THOTH_CEPH_BUCKET_PREFIX}'
        aws_access_key_id: '{THOTH_CEPH_KEY_ID}'
        aws_secret_access_key: '{THOTH_CEPH_SECRET_KEY}'
        s3_endpoint: '{THOTH_S3_ENDPOINT_URL}'

    - name: Project2VecModelStore
      import: thoth.worker.storages
      configuration:
        <<: *ceph_configuration
        prefix: '{THOTH_CEPH_BUCKET_PREFIX}project2vec/'

    - name: ProjectInfoStore
      import: thoth.worker.storages
      configuration:
        <<: *ceph_configuration
        prefix: '{THOTH_CEPH_BUCKET_PREFIX}pypi_project/ProjectInfo/'

    - name: StackOverflowKeywordsStore
      import: thoth.worker.storages
      configuration:
        <<: *ceph_configuration

    - name: AggregatedKeywordsStore
      import: thoth.worker.storages
      configuration:
        <<: *ceph_configuration

    - name: ReadmeStore
      import: thoth.worker.storages
      configuration:
        <<: *ceph_configuration

    - name: GitHubInfoStore
      import: thoth.worker.storages
      configuration:
        <<: *ceph_configuration

    - name: TravisLogsStorage
      import: thoth.worker.storages
      configuration:
        <<: *ceph_configuration
        prefix: '{THOTH_CEPH_BUCKET_PREFIX}travis-logs/'

  global:
    trace:
      - logging: true
